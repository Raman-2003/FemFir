<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Checkout</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
  <!-- SweetAlert2 Library -->
 
      <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css">
    <style>
        .coupon-item {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .coupon-item input[type="checkbox"] {
            margin-right: 10px;
        }

        .coupon-item label {
            font-weight: bold;
            margin-right: 20px;
            transition: color 0.3s ease;
        }

        .coupon-item input[type="checkbox"]:checked+label {
            color: #007bff;
        }

        .coupon-item:hover {
            background-color: #f9f9f9;
        }

        #couponsModal .modal-body {
            max-height: 400px;
            overflow-y: auto;
        }

        .coupon-item {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin-bottom: 10px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        .coupon-item input[type="checkbox"] {
            margin-right: 10px;
        }

        .coupon-item label {
            display: block;
            font-weight: bold;
            transition: color 0.3s ease;
            margin-bottom: 5px;
        }

        .coupon-code {
            font-size: 18px;
            margin-bottom: 5px;
        }

        .coupon-description {
            font-style: italic;
            color: #666;
            margin-bottom: 5px;
        }

        .coupon-expiry {
            color: #999;
            font-size: 12px;
        }

        .coupon-item:hover {
            background-color: #f9f9f9;
        }
        #billingAddressSelect{
            width: 500px;
        }

      
    </style>
</head>

<body>
    <!-- Checkout Start -->
    <div class="checkout">
        <div class="container">
            <div class="row d-flex">
                <div class="col-md-7 col-lg-7"> 
                    <form id="checkoutForm" action="/checkout/placeOrder" method="POST">
                        <div class="billing-address">
                            <h2>Billing Address</h2>
                            <select class="form-control mb-3" name="billingAddress" id="billingAddressSelect">
                                {{#each addresses}}
                                <option value="{{this._id}}" {{#if this.is_default}}selected{{/if}}>
                                    {{this.addressLine1}}, {{this.city}}, {{this.state}}, {{this.country}}, {{this.pin}}
                                </option>
                                {{/each}}
                            </select>
                            <a href="/add-new-address" class="btn btn-primary mb-3" id="addNewAddressButton">Add New
                                Address</a>
                            <button type="button" class="btn btn-secondary mb-3" id="editAddressButton">Edit
                                Address</button>
                        </div>

                        <div class="shipping-address">
                            <h2>Shipping Address</h2>
                            <div class="custom-control custom-checkbox">
                                <input type="checkbox" class="custom-control-input" id="shipToDifferent"
                                    name="shipToDifferent">
                                <label class="custom-control-label" for="shipToDifferent">Ship to a different
                                    address</label>
                            </div>
                            <select class="form-control mt-3 mb-3 d-none" name="shippingAddress"
                                id="shippingAddressSelect">
                                {{#each addresses}}
                                <option value="{{this._id}}">{{this.addressLine1}}, {{this.city}}, {{this.state}},
                                    {{this.country}}, {{this.pin}}</option>
                                {{/each}}
                            </select>
                        </div>

                       <div class="payment-method">
    <h2>Payment Method</h2>
    <div class="custom-control custom-radio">
        <input type="radio" class="custom-control-input" id="cashOnDelivery"
            name="paymentMethod" value="Cash on Delivery" checked>
        <label class="custom-control-label" for="cashOnDelivery">Cash on Delivery</label>
    </div>
    <div class="custom-control custom-radio">
        <input type="radio" class="custom-control-input" id="razorpay" name="paymentMethod"
            value="Razorpay">
        <label class="custom-control-label" for="razorpay">Razorpay</label>
    </div>
    <div class="custom-control custom-radio">
        <input type="radio" class="custom-control-input" id="wallet" name="paymentMethod"
            value="Wallet" >
        <label class="custom-control-label" for="wallet">Wallet</label>
    </div>
</div>

                        

                        <button type="submit" class="btn btn-primary mt-3" id="placeOrderButton" style="width: 127px;">Place Order</button>
                    </form>
                </div>

                <div class="col-md-6">
                    <div class="coupons">
                        <!-- Button to trigger the modal -->
                        <button id="view-coupons-btn" class="btn btn-primary" style="display: flex; margin-top:10px">View Coupons</button>
                    </div>
                </div>

                <!-- Modal HTML -->
                <div class="modal fade" id="couponsModal" tabindex="-1" aria-labelledby="couponsModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="couponsModalLabel">Available Coupons</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body" id="coupons-modal-content">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="sr-only">Loading...</span>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" id="apply-selected-coupon-btn">Apply
                                    Coupon</button>
                                    <!-- Add this button to the modal footer, next to the "Apply Coupon" button -->
                                <button type="button" class="btn btn-danger" id="remove-coupon-btn" disabled style="background-color: #375e87;">Remove Coupon</button>
                                <input type="hidden" name="appliedCouponId" id="appliedCouponId">

                            </div>
                        </div>
                    </div>
                </div>
 
             <div class="col-md-5">
    <div class="order-summary">
        <h2>Order Summary</h2>
        <ul class="list-group">
            {{#each cart}}
            <li class="list-group-item">
                <div>{{this.product.name}} x {{this.quantity}}</div>
                <div>Price: {{this.product.price}} x {{this.quantity}} = {{this.total}}</div>
                <div>MRP: {{this.product.mrp}} x {{this.quantity}} = {{this.mrpTotal}}</div> <!-- Display MRP total -->
            </li>
            {{/each}}
            <li class="list-group-item d-flex justify-content-between">
                <span>Subtotal</span>
                <span>{{subTotal}}</span>
            </li>
            <li class="list-group-item d-flex justify-content-between coupon-discount {{#unless discountAmount}}d-none{{/unless}}">
                <span>Coupon Discount</span>
                <span>-{{discountAmount}}</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <span>Shipping cost</span>
                <span>Free</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <span>Total</span>
                <span>{{grandTotal}}</span>
            </li>
        </ul>
    </div>
</div>

            </div>
        </div>
    </div>
    <!-- Checkout End -->
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
              $('#checkoutForm').submit(function (e) {
        e.preventDefault();

        const paymentMethod = $('input[name="paymentMethod"]:checked').val();
        const amount = $('#amount').val();
        const note = $('#note').val();
        const items = $('#items').val();

        console.log('Amount:', amount);
        console.log('Note:', note);    
        console.log('Items:', items);  

        const data = {
            amount: amount,
            note: note,
            items: items
        };

        if (paymentMethod === 'Razorpay') {
            $.ajax({
                url: $(this).attr('action'),
                type: 'POST',
                data: $(this).serialize(),
                success: function (response) {
                    if (response.razorpayOrder) {
                        var options = {
                            "key": "rzp_test_oO3a8uVtaGGjX8",
                            "amount": response.razorpayOrder.amount,
                            "currency": "INR",
                            "name": "FemaleFirst",
                            "description": "Test Transaction",
                            "order_id": response.razorpayOrder.id,
                            "handler": function (response) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Payment successful!',
                                    text: 'Your order ID is ' + response.razorpay_order_id,
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '/profile';
                                    }
                                });
                            },
                            "prefill": {
                                "name": "Test User",
                                "email": "test.user@example.com",
                                "contact": "9999999999"
                            },
                            "theme": {
                                "color": "#3399cc"
                            }
                        };

                        var rzp1 = new Razorpay(options);
                        rzp1.open();
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error('Error:', errorThrown);
                }
            });
        } else if (paymentMethod === 'Wallet') {
        $.ajax({
            url: '/checkout/placeOrder',
            type: 'POST',
            data: $(this).serialize(),
            success: function (response) {
                if (response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Payment successful!',
                        text: 'Your order ID is ' + response.orderId,
                        confirmButtonText: 'OK'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/profile'; 
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Payment failed',
                        text: response.message,
                        confirmButtonText: 'OK'
                    });
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.error('Error:', errorThrown);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops',
                    text: 'You have not enough money in your wallet',
                    confirmButtonText: 'OK'
                });
            }
        });
    } else {
                // For Cash on Delivery 
                this.submit();
            }
    });

            $('#view-coupons-btn').click(function () {
                $.ajax({
                    url: '/coupons_list',
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            $('#coupons-modal-content').html('');
                            response.coupons.forEach(coupon => {
                                const couponItem = `
                            <div class="coupon-item">
                                <input type="checkbox" class="coupon-checkbox" id="${coupon._id}" name="coupon" value="${coupon._id}">
                                <label for="${coupon._id}">
                                    <span class="coupon-code">${coupon.code}</span>
                                    <span class="coupon-description">${coupon.description}</span>
                                    <span class="coupon-expiry">Expires on: ${coupon.expiryDate}</span>
                                </label>
                            </div>
                        `;
                                $('#coupons-modal-content').append(couponItem);
                            });
                            $('#couponsModal').modal('show');
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Unable to fetch coupons. Please try again later.',
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', errorThrown);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Unable to fetch coupons. Please try again later.',
                        });
                    }
                });
            });

             $('#apply-selected-coupon-btn').click(function () {
                const selectedCoupon = $('input[name="coupon"]:checked').val();
                if (selectedCoupon) {
                    $.ajax({
                        url: '/checkout/apply-coupon',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ couponId: selectedCoupon }),
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Coupon Applied',
                                    text: 'The coupon has been successfully applied!',
                                });
                                $('#couponsModal').modal('hide');
                                updateCartSummary(response.updatedCart); // Call the function to update the cart summary
                                $('#remove-coupon-btn').prop('disabled', false); // Enable remove coupon button
                                $('#appliedCouponId').val(selectedCoupon); // Store the applied coupon ID
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Invalid Coupon',
                                    text: response.message,
                                });
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.error('Error:', errorThrown);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Unable to apply coupon. Please try again later.',
                            });
                        }
                    });
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'No Coupon Selected',
                        text: 'Please select a coupon to apply.',
                    });
                }
            });

             // Remove coupon functionality
        $('#remove-coupon-btn').click(function () {
            const appliedCouponId = $('#appliedCouponId').val();
            if (appliedCouponId) {
                $.ajax({
                    url: '/checkout/remove-coupon',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ couponId: appliedCouponId }),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Coupon Removed',
                                text: 'The coupon has been successfully removed!',
                            });
                            $('#appliedCouponId').val(''); // Clear the applied coupon ID
                            updateCartSummary(response.updatedCart);
                            $('#remove-coupon-btn').prop('disabled', true); // Disable remove coupon button
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message,
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error('Error:', errorThrown);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Unable to remove coupon. Please try again later.',
                        });
                    }
                });
            } else {
                Swal.fire({
                    icon: 'warning',
                    title: 'No Coupon Applied',
                    text: 'No coupon is applied currently.',
                });
            }
        });

            function updateCartSummary(updatedCart) {
                let cartSummaryHtml = '';

                updatedCart.cart.forEach(item => {
                    cartSummaryHtml += `
                <li class="list-group-item d-flex justify-content-between">
                    <div>${item.product.name} x ${item.quantity}</div>
                    <div>${item.total}</div>
                </li>
            `;
                });

                cartSummaryHtml += `
            <li class="list-group-item d-flex justify-content-between">
                <span>Subtotal</span>
                <span>${updatedCart.subTotal}</span>
            </li>
            `;

             if (updatedCart.discountAmount) {
                    cartSummaryHtml += `
            <li class="list-group-item d-flex justify-content-between coupon-discount">
                <span>Coupon Discount</span>
                <span>-${updatedCart.discountAmount}</span>
            </li>
        `;
                } else {
                    // Hide coupon discount row if there's no discount
                    $('.coupon-discount').addClass('d-none');
                }

             cartSummaryHtml += `
            <li class="list-group-item d-flex justify-content-between">
                <span>Shipping cost</span>
                <span>Free</span>
            </li>
            <li class="list-group-item d-flex justify-content-between">
                <span>Total</span>
                <span>${updatedCart.grandTotal}</span>
            </li>
        `;

                $('.order-summary .list-group').html(cartSummaryHtml);
            }

            $('#shipToDifferent').change(function () {
                if (this.checked) {
                    $('#shippingAddressSelect').removeClass('d-none');
                } else {
                    $('#shippingAddressSelect').addClass('d-none');
                }
            });

            $('#editAddressButton').click(function () {
                const selectedAddressId = $('#billingAddressSelect').val();
                if (selectedAddressId) {
                    window.location.href = `/edit-address/${selectedAddressId}`;
                }
            });
        });

         document.getElementById('placeOrderButton').addEventListener('click', function () {
            placeOrder();
        });

        function placeOrder() {
            // Simulate order processing with a timeout
            setTimeout(function() {
                var selectedPaymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
                if (selectedPaymentMethod === 'Cash on Delivery') {
                    // Trigger SweetAlert
                    Swal.fire({
                        icon: 'success',
                        title: 'Order Placed!',
                        text: 'Your order has been successfully placed and will be processed with Cash on Delivery.',
                        confirmButtonText: 'Okay'
                    });
                }
            }, 500); 
        }
    </script>
</body>

</html>