<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Required meta tags and other head content -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://unpkg.com/js-image-zoom@0.4.1/js-image-zoom.js" type="application/javascript"></script>

    <style>
        /* General button styles */
        .action button {
            font-family: 'Arial', sans-serif;
            font-size: 16px;
            padding: 10px 20px;
            margin: 5px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        /* Add to Wishlist button */
        .add-to-wishlist {
            background-color: #0c5d83;
            color: #fffafa;
        }

        .add-to-wishlist:hover {
            background-color: #ecb939;
        }

        /* Add to Cart button */
        .add-to-cart {
            background-color: #155c83;
            color: white;
        }

        .add-to-cart:hover {
            background-color: #e68a00;
        }

        /* Additional styles for both buttons */
        .action button:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(21, 156, 228, 0.4);
        }
    </style>
</head>

<body>
    <!-- Product Detail Start -->
    <div class="product-detail">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="row align-items-center product-detail-top">
                        <div class="col-md-5">
                            <div class="product-slider-single" id="summasample">
                                <img src="{{product.mainImage}}" alt="{{product.name}}">
                                {{#each product.subImages}}
                                <img src="{{this}}" alt="{{../product.name}}">
                                {{/each}}
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="product-content">
                                <div class="title">
                                    <h2>{{product.name}}</h2>
                                </div>
                                <div class="ratting">
                                    <i class="fa fa-star"></i>
                                    <i class="fa fa-star"></i>
                                    <i class="fa fa-star"></i>
                                    <i class="fa fa-star"></i>
                                    <i class="fa fa-star"></i>
                                </div>
                                <div class="price">${{product.price}}  <span class="mrp">${{product.mrp}}</span> <!-- Display MRP --> </div>
                                <div class="details">
                                    <p>{{product.description}}</p>
                                </div>
                                <div class="stock">
                                    <h4>Stock:</h4>
                                    <p>{{#if product.stock}} {{product.stock}} {{else}} OUT OF STOCK {{/if}}</p>
                                </div>
                                <div class="category">
                                    <h4>Category:</h4>
                                    <p>{{product.category.name}}</p>
                                </div>

                                <div class="quantity">
                                    <h4>Quantity:</h4>
                                    <div class="qty">
                                        <button class="btn-minus" data-product-id="{{product._id}}"><i
                                                class="fa fa-minus"></i></button>
                                        <input type="text" value="1" data-product-id="{{product._id}}">
                                        <button class="btn-plus" data-product-id="{{product._id}}"><i
                                                class="fa fa-plus"></i></button>
                                    </div>
                                </div>

                                <div class="action">
                                    <!-- Add to Wishlist Button -->
                                    <button class="add-to-wishlist" data-product-id="{{product._id}}">Add to
                                        Wishlist</button>
                                    <!-- Add to Cart Button -->
                                    <button class="add-to-cart" data-product-id="{{product._id}}">Add to Cart</button>
                                </div>

                            </div>
                        </div>
                    </div>

                    <div class="row product-detail-bottom">
                        <div class="col-lg-12">
                            <ul class="nav nav-pills nav-justified">
                                <li class="nav-item">
                                    <a class="nav-link active" data-toggle="pill" href="#description">Description</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" data-toggle="pill" href="#reviews">Reviews (1)</a>
                                </li>
                            </ul>

                            <div class="tab-content">
                                <div id="description" class="container tab-pane active"><br>
                                    <h4>Product description</h4>
                                    <p>{{product.description}}</p>
                                </div>
                                <div id="reviews" class="container tab-pane fade"><br>
                                    <div class="reviews-submitted">
                                        {{#each product.reviews}}
                                        <div class="reviewer">{{this.reviewer}} - <span>{{this.date}}</span></div>
                                        <div class="ratting">
                                            {{#times this.rating}}
                                            <i class="fa fa-star"></i>
                                            {{/times}}
                                            {{#times (subtract 5 this.rating)}}
                                            <i class="fa fa-star-o"></i>
                                            {{/times}}
                                        </div>
                                        <p>{{this.comment}}</p>
                                        {{/each}}
                                    </div>
                                    <div class="reviews-submit">
                                        <h4>Give your Review:</h4>
                                        <div class="ratting">
                                            <i class="fa fa-star-o"></i>
                                            <i class="fa fa-star-o"></i>
                                            <i class="fa fa-star-o"></i>
                                            <i class="fa fa-star-o"></i>
                                            <i class="fa fa-star-o"></i>
                                        </div>
                                        <div class="row form">
                                            <div class="col-sm-6">
                                                <input type="text" placeholder="Name">
                                            </div>
                                            <div class="col-sm-6">
                                                <input type="email" placeholder="Email">
                                            </div>
                                            <div class="col-sm-12">
                                                <textarea placeholder="Review"></textarea>
                                            </div>
                                            <div class="col-sm-12">
                                                <button>Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Related Products Section -->
                    <div class="container">
                        <div class="section-header">
                            <h3>Related Products</h3>
                            <p>Made from 100% pure silk, this saree exudes luxury and sophistication. The vibrant colors
                                and subtle sheen of the silk fabric will make you stand out at any occasion.</p>
                        </div>
                    </div>

                    <div class="row mt-5">
                        <div class="col-12">
                            <h3>Related Products</h3>
                        </div>
                        {{#each relatedProducts}}
                        <div class="col-md-3">
                            <div class="product-item">
                                <div class="product-thumb">
                                    <img src="{{this.mainImage}}" class="img-fluid" alt="{{this.name}}">
                                    <div class="preview-meta">
                                        <ul></ul>
                                    </div>
                                </div>
                                <div class="product-content">
                                    <h4><a href="/viewone/{{this._id}}">{{this.name}}</a></h4>
                                </div>
                            </div>
                        </div>
                        {{/each}}
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Product Detail End -->

    <script>
        var options = {
            width: 400,
            height: 650,
            zoomWidth: 500,
            offset: { vertical: 0, horizontal: 10 },
            scale: 1.2
        }
        new ImageZoom(document.getElementById('summasample'), options);

        document.addEventListener('DOMContentLoaded', () => {
            const stock = {{ product.stock }};
        const addToWishlistButton = document.querySelector('.add-to-wishlist');
        const quantityInputs = document.querySelectorAll('.quantity input');

        // Quantity minus button functionality
        document.querySelectorAll('.btn-minus').forEach(button => {
            button.addEventListener('click', () => {
                const productId = button.getAttribute('data-product-id');
                const quantityInput = document.querySelector(`input[data-product-id="${productId}"]`);
                let newQuantity = parseInt(quantityInput.value) - 1;
                if (newQuantity > 0) {
                    quantityInput.value = newQuantity;
                } else {
                    Swal.fire({
                        title: 'Warning!',
                        text: 'Quantity is zero. Please increase your quantity before adding to wishlist.',
                        icon: 'warning',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    quantityInput.value = 1;
                }
            });
        });

        // Quantity plus button functionality
        document.querySelectorAll('.btn-plus').forEach(button => {
            button.addEventListener('click', () => {
                const productId = button.getAttribute('data-product-id');
                const quantityInput = document.querySelector(`input[data-product-id="${productId}"]`);
                let newQuantity = parseInt(quantityInput.value) + 1;
                if (newQuantity <= stock) {
                    quantityInput.value = newQuantity;
                } else {
                    Swal.fire({
                        title: 'Stock Limit Reached!',
                        text: `Stock is only available ${stock}.`,
                        icon: 'info',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            });
        });

        if (addToWishlistButton) {
            addToWishlistButton.addEventListener('click', async function () {
                const productId = this.dataset.productId;
                const quantityInput = document.querySelector(`input[data-product-id="${productId}"]`);
                const quantity = parseInt(quantityInput.value);

                if (quantity < 1) {
                    Swal.fire({
                        title: 'Warning!',
                        text: 'Quantity is zero. Please increase your quantity before adding to wishlist.',
                        icon: 'warning',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    return;
                }

                try {
                    const response = await fetch('/wishlist/add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ id: productId, quantity: quantity })
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            title: 'Added!',
                            text: 'Product has been added to your wishlist.',
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    } else {
                        Swal.fire({
                            title: 'Sorry!',
                            text: 'Already added to wishlist',
                            icon: 'error',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred while adding the product to the wishlist.',
                        icon: 'error',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            });
        } else {
            console.error('Add to Wishlist button not found.');
        }

        const addToCartButton = document.querySelector('.add-to-cart');
        // Add to Cart functionality
        if (addToCartButton) {
            addToCartButton.addEventListener('click', async function () {
                const productId = this.dataset.productId;
                const quantityInput = document.querySelector(`input[data-product-id="${productId}"]`);
                const quantity = parseInt(quantityInput.value);

                if (quantity < 1) {
                    Swal.fire({
                        title: 'Warning!',
                        text: 'Quantity is zero. Please increase your quantity before adding to cart.',
                        icon: 'warning',
                        timer: 2000,
                        showConfirmButton: false
                    });
                    return;
                }

                try {
                    const response = await fetch('/cart/add-to-cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ id: productId, quantity: quantity })
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            title: 'Added!',
                            text: 'Product has been added to your cart.',
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: result.message || 'An error occurred while adding the product to the cart.',
                            icon: 'error',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred while adding the product to the cart.',
                        icon: 'error',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            });
        } else {
            console.error('Add to Cart button not found.');
        }
        });
    </script>
</body>

</html>